name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

#env:
#  CONTAINER_NAME: "auth-server-container"

jobs:
  deploy-to-vds:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Build Go project
        run: |
          GOOS=linux GOARCH=amd64 go build -o ./auth-server cmd/server/main.go

      - name: Copy files to remote server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "auth-server,Dockerfile,docker-compose.prod.yaml,prod.env,migrations,migration_prod.Dockerfile,migration_prod.sh"
          target: "./auth/"

      - name: Run Docker Compose and restart service on remote server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ./auth/            
            
            docker compose -f docker-compose.prod.yaml down
            docker compose --env-file prod.env -f docker-compose.prod.yaml up -d --build

      - name: Restart service on remote server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ./auth/
            
            chmod +x auth-server
            
            # Убиваем текущий процесс, если он запущен
            #pkill -9 -f auth-server || true

            # Запускаем новый процесс в фоновом режиме
            nohup ./auth-server --config-path prod.env > auth-server.log 2>&1 &

            # Добавляем логирование
            echo "Process started with PID $!" >> auth-server.log